{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a godo server.",
        "title": "GODO API",
        "contact": {
            "name": "API Support"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/groups/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Создание группы пользователей",
                "operationId": "group_create",
                "parameters": [
                    {
                        "description": "group data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CreateGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "Not Authorized",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/groups/{group_id}/apply": {
            "post": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Использование приглашения в группу.",
                "operationId": "apply_user_to_group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "invite id",
                        "name": "invite",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/groups/{group_id}/invite": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invites",
                    "Groups"
                ],
                "summary": "создание приглашения в группу.",
                "operationId": "invite_user_groups",
                "parameters": [
                    {
                        "description": "invite data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateInviteViaGroupRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CreateInviteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/invites": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invites",
                    "Groups"
                ],
                "summary": "создание приглашения в группу.",
                "operationId": "invite_user",
                "parameters": [
                    {
                        "description": "invite data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateInviteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CreateInviteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Server"
                ],
                "summary": "Запрос состояния сервиса",
                "operationId": "ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get summary info about user.",
                "operationId": "users_me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Создание пользователя",
                "operationId": "user_create",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/users/token": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "Создание JWT токена для пользователя.",
                "operationId": "login_jwt",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CreateTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CreateGroupRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description is additional info about group.\nFor example a Company name or any other meta info.",
                    "type": "string"
                },
                "name": {
                    "description": "Name must be unique string. Name will be used",
                    "type": "string"
                }
            }
        },
        "model.CreateGroupResponse": {
            "type": "object",
            "properties": {
                "created-at": {
                    "description": "CreatedAt is creation time in UNIX format",
                    "type": "integer"
                },
                "description": {
                    "description": "Description is short info about group.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is primary key of group.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is unique name of group.",
                    "type": "string"
                }
            }
        },
        "model.CreateInviteRequest": {
            "type": "object",
            "properties": {
                "comments-permission": {
                    "type": "integer",
                    "example": 4
                },
                "group": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "limit": {
                    "type": "integer",
                    "example": 2
                },
                "members-permission": {
                    "type": "integer",
                    "example": 4
                },
                "reviews-permission": {
                    "type": "integer",
                    "example": 4
                },
                "tasks-permission": {
                    "type": "integer",
                    "example": 4
                }
            }
        },
        "model.CreateInviteResponse": {
            "type": "object",
            "properties": {
                "invite-link": {
                    "type": "string",
                    "example": "http://localhost:8080/api/v1/groups/00000000-0000-0000-0000-000000000000/apply?invite=00000000-0000-0000-0000-000000000000"
                },
                "limit": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "model.CreateInviteViaGroupRequest": {
            "type": "object",
            "properties": {
                "comments-permission": {
                    "type": "integer",
                    "example": 4
                },
                "limit": {
                    "type": "integer",
                    "example": 2
                },
                "members-permission": {
                    "type": "integer",
                    "example": 4
                },
                "reviews-permission": {
                    "type": "integer",
                    "example": 4
                },
                "tasks-permission": {
                    "type": "integer",
                    "example": 4
                }
            }
        },
        "model.CreateTokenRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email is user email",
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "description": "Password is password of user.",
                    "type": "string",
                    "example": "strong_password"
                },
                "token-type": {
                    "type": "string",
                    "example": "bearer"
                }
            }
        },
        "model.CreateTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "model.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "short summary info about error"
                },
                "field": {
                    "type": "string",
                    "example": "additional info about error"
                }
            }
        },
        "model.RegisterUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email is user email",
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "description": "Password is password string",
                    "type": "string",
                    "example": "strong_password"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email is string field of user's email addr.",
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "description": "ID is user uuid.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth on": {
            "type": "basic"
        }
    }
}